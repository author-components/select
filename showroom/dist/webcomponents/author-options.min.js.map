{"version":3,"file":"author-options.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorOptionsElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      cherryPickedOptions: {\n        private: true\n      },\n\n      form: {\n        readonly: true,\n        get: () => this.parentNode.form\n      },\n\n      displayOptions: {\n        readonly: true,\n        get: () => {\n          let AuthorHTMLOptionsCollection = this.PRIVATE.generateAuthorHTMLOptionsCollectionConstructor()\n          let array = this.options.map(option => option.displayElement)\n          let addFunction = (element, before) => this.addOption(this.PRIVATE.generateOptionObject(element), before)\n          let removeFunction = index => this.removeOptionByIndex(index)\n          return new AuthorHTMLOptionsCollection(array, this.selectedIndex, addFunction, removeFunction)\n        }\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.options.findIndex(option => option.displayElement.hover)\n      },\n\n      isSlave: {\n        private: true,\n        readonly: true,\n        get: () => this.parentNode.localName === 'author-select' || this.parentNode.localName === 'author-datalist'\n      },\n\n      lastSelectedIndex: {\n        private: true\n      },\n\n      multiple: {\n        readonly: true,\n        get: () => this.parentNode.multiple\n      },\n\n      options: {\n        readonly: true,\n        default: []\n      },\n\n      selectedIndices: {\n        readonly: true,\n        get: () => [...this.selectedOptions].map(option => option.index)\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => {\n          let nodes = this.querySelectorAll('[selected]')\n          let AuthorHTMLCollection = this.PRIVATE.generateAuthorHTMLCollectionConstructor()\n          return new AuthorHTMLCollection(nodes)\n        }\n      },\n\n      Selection: {\n        readonly: true,\n        private: true,\n        default: class {\n          constructor (options = []) {\n            this.options = options\n          }\n\n          get displayElements () {\n            return this.options.map(option => option.displayElement)\n          }\n\n          get length () {\n            return this.options.length\n          }\n\n          get first () {\n            return this.options[0]\n          }\n\n          get last () {\n            return this.options[this.options.length - 1]\n          }\n\n          append (option) {\n            this.options.push(option)\n          }\n\n          clear () {\n            this.options = []\n          }\n\n          includes (option) {\n            return this.options.includes(option)\n          }\n\n          prepend (option) {\n            this.options.unshift(option)\n          }\n\n          selectAll () {\n            this.options.forEach(option => option.selected = true)\n          }\n        }\n      },\n\n      selectionStartIndex: {\n        private: true\n      },\n\n      visibleOptions: {\n        readonly: true,\n        get: () => this.options.filter(option => !option.hidden)\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      arrowDownHandler: evt => {\n        if (!this.multiple) {\n          let { startIndex } = evt.detail\n\n          switch (startIndex) {\n            case this.options.length - 1:\n              return\n\n            default:\n              return this.hoverOption(startIndex + 1)\n          }\n\n          return\n        }\n\n        let { lastSelectedIndex } = this.PRIVATE\n\n        if (lastSelectedIndex === this.options.length - 1) {\n          return\n        }\n\n        return this.emit('option.selected', {\n          index: lastSelectedIndex === null ? 0 : lastSelectedIndex + 1,\n          keyboard: true,\n          shiftKey: evt.detail.shiftKey,\n          ctrlKey: false,\n          metaKey: false\n        })\n      },\n\n      arrowUpHandler: evt => {\n        if (!this.multiple) {\n          let { startIndex } = evt.detail\n\n          switch (startIndex) {\n            case -1:\n            case 0:\n              return\n\n            default:\n              return this.hoverOption(startIndex - 1)\n          }\n\n          return\n        }\n\n        let { lastSelectedIndex } = this.PRIVATE\n\n        if (lastSelectedIndex === 0) {\n          return\n        }\n\n        return this.emit('option.selected', {\n          index: lastSelectedIndex === null ? this.options.length - 1 : lastSelectedIndex - 1,\n          keyboard: true,\n          shiftKey: evt.detail.shiftKey,\n          ctrlKey: false,\n          metaKey: false\n        })\n      },\n\n      diffSelections: (comparator, comparable) => {\n        return comparator.filter(option => !comparable.includes(option))\n      },\n\n      generateAuthorHTMLOptionsCollectionConstructor: () => {\n        let _p = new WeakMap()\n\n        let AuthorHTMLCollection = this.PRIVATE.generateAuthorHTMLCollectionConstructor()\n\n        let AuthorHTMLOptionsCollection = class AuthorHTMLOptionsCollection extends AuthorHTMLCollection {\n          constructor (arr, selectedIndex = -1, add, remove) {\n            super(arr)\n            this.selectedIndex = selectedIndex\n            this.add = add\n            this.remove = remove\n\n            _p.set(this, {arr})\n          }\n\n          [Symbol.toStringTag] () {\n            return 'AuthorHTMLOptionsCollection'\n          }\n        }\n\n        return AuthorHTMLOptionsCollection\n      },\n\n      generateOptgroup: optgroup => {\n        if (!customElements.get('author-optgroup')) {\n          return this.UTIL.throwError({\n            type: 'dependency',\n            vars: { name: 'author-optgroup' }\n          })\n        }\n\n        let surrogate = document.createElement('author-optgroup')\n        surrogate.id = this.UTIL.generateGuid('optgroup')\n\n        let label = optgroup.getAttribute('label')\n\n        if (!label || label.trim() === '') {\n          return this.UTIL.throwError({\n            message: '<optgroup> must have a label attribute!'\n          })\n        }\n\n        surrogate.setAttribute('label', label)\n\n        let options = optgroup.querySelectorAll('option')\n        Array.from(options).forEach(option => {\n          this.addOption(this.PRIVATE.generateOptionObject(option), null, surrogate)\n        })\n\n        return surrogate\n      },\n\n      generateOptionObject: sourceElement => {\n        if (!customElements.get('author-option')) {\n          return this.UTIL.throwError({\n            type: 'dependency',\n            vars: { name: 'author-option' }\n          })\n        }\n\n        let OptionConstructor = this.PRIVATE.generateOptionConstructor()\n        return new OptionConstructor(this, this.UTIL.generateGuid(), sourceElement, document.createElement('author-option'))\n      },\n\n      generateOptionConstructor: () => {\n        let _p = new WeakMap()\n\n        return class AuthorOptionObject {\n          constructor (parent, key, sourceElement, displayElement) {\n            this.key = key\n            this.form = parent.form\n            this.defaultSelected = sourceElement.selected\n\n            this.sourceElement = sourceElement\n            this.displayElement = displayElement\n            this.displayElement.parent = parent\n            this.displayElement.selected = sourceElement.selected\n            this.displayElement.defaultSelected = sourceElement.selected\n            this.displayElement.innerHTML = sourceElement.innerHTML\n\n            // Add additional attributes\n            Array.from(sourceElement.attributes).forEach(attr => {\n              if (typeof attr.value === 'boolean') {\n                return attr.value ? this.displayElement.setAttribute(attr.name, '') : this.displayElement.removeAttribute(attr.name)\n              }\n\n              this.displayElement.setAttribute(attr.name, attr.value)\n            })\n\n            _p.set(this, {\n              attributes: {\n                disabled: sourceElement.disabled,\n                id: sourceElement.getAttribute('id'),\n                label: sourceElement.getAttribute('label') || sourceElement.textContent.trim(),\n                selected: sourceElement.selected,\n                value: sourceElement.hasAttribute('value') ? sourceElement.getAttribute('value').trim() : null,\n                text: sourceElement.text.trim(),\n                hidden: sourceElement.hidden\n              },\n\n              setAttr: (name, value) => {\n                this.sourceElement[name] = value\n\n                if (typeof value === 'boolean') {\n                  value ? this.displayElement.setAttribute(name, '') : this.displayElement.removeAttribute(name)\n                } else {\n                  this.displayElement.setAttribute(name, value)\n                }\n\n                _p.get(this).attributes[name] = value\n              }\n            })\n          }\n\n          get disabled () {\n            return _p.get(this).attributes.disabled\n          }\n\n          set disabled (bool) {\n            _p.get(this).setAttr('disabled', bool)\n          }\n\n          get hidden () {\n            return _p.get(this).attributes.hidden\n          }\n\n          set hidden (bool) {\n            _p.get(this).setAttr('hidden', bool)\n          }\n\n          get index () {\n            return this.sourceElement.index\n          }\n\n          get id () {\n            return _p.get(this).attributes.id\n          }\n\n          set id (id) {\n            _p.get(this).setAttr('id', id)\n          }\n\n          get selected () {\n            return _p.get(this).attributes.selected\n          }\n\n          set selected (bool) {\n            _p.get(this).setAttr('selected', bool)\n          }\n\n          get label () {\n            return _p.get(this).attributes.label\n          }\n\n          set label (label) {\n            _p.get(this).setAttr('label', label)\n          }\n\n          get text () {\n            return _p.get(this).attributes.text\n          }\n\n          set text (text) {\n            _p.get(this).setAttr('text', text)\n          }\n\n          get value () {\n            return _p.get(this).attributes.value\n          }\n\n          set value (value) {\n            _p.get(this).setAttr('value', value)\n          }\n\n          remove () {\n            this.sourceElement.remove()\n            this.displayElement.remove()\n          }\n        }\n      },\n\n      getCurrentSelection: () => this.options.filter(option => option.selected),\n\n      handleClickSelection: (detail, cb) => {\n        let {\n          cherryPickedOptions,\n          getCurrentSelection,\n          lastSelectedIndex,\n          Selection,\n          selectionStartIndex\n        } = this.PRIVATE\n\n        let { index, shiftKey, ctrlKey, metaKey } = detail\n        let selectedOption = this.options[index]\n\n        if (shiftKey && lastSelectedIndex !== null) {\n          this.PRIVATE.lastSelectedIndex = index\n          this.PRIVATE.cherryPickedOptions.clear()\n          let bounds = [index, selectionStartIndex].sort((a, b) => a - b)\n          return cb(new Selection(bounds[0] === bounds[1] ? [selectedOption] : this.options.slice(bounds[0], bounds[1] + 1)))\n        }\n\n        let currentSelection = getCurrentSelection()\n\n        if (ctrlKey || metaKey) {\n          this.PRIVATE.lastSelectedIndex = index\n          this.PRIVATE.selectionStartIndex = index\n\n          this.PRIVATE.cherryPickedOptions.options = selectedOption.selected ? currentSelection.filter(option => option !== selectedOption) : this.options.filter(option => option === selectedOption || currentSelection.includes(option))\n          return cb(this.PRIVATE.cherryPickedOptions)\n        }\n\n        if (currentSelection.length === 1 && index === lastSelectedIndex) {\n          return\n        }\n\n        this.PRIVATE.lastSelectedIndex = index\n        this.PRIVATE.selectionStartIndex = index\n        this.PRIVATE.cherryPickedOptions.clear()\n        return cb(new Selection([selectedOption]))\n      },\n\n      handleKeyboardSelection: (detail, cb) => {\n        let {\n          cherryPickedOptions,\n          getCurrentSelection,\n          Selection,\n          selectionStartIndex\n        } = this.PRIVATE\n\n        let { index, shiftKey } = detail\n        let selectedOption = this.options[index]\n        let currentSelection = getCurrentSelection()\n\n        this.PRIVATE.lastSelectedIndex = index\n\n        if (!shiftKey || currentSelection.length === 0) {\n          this.PRIVATE.selectionStartIndex = index\n          this.PRIVATE.cherryPickedOptions.clear()\n          return cb(new Selection([selectedOption]))\n        }\n\n        // 1 option or more selected\n        if (currentSelection.length > 0) {\n          let bounds = [index, selectionStartIndex].sort()\n          let selection = new Selection(bounds[0] === bounds[1] ? [selectedOption] : this.options.slice(bounds[0], bounds[1] + 1))\n\n          if (cherryPickedOptions.length > 0) {\n            selection.options = this.options.filter(option => selection.includes(option) || cherryPickedOptions.includes(option))\n          }\n\n          return cb(selection)\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        let {\n          cherryPickedOptions,\n          diffSelections,\n          getCurrentSelection,\n          generateAuthorHTMLCollectionConstructor,\n          handleClickSelection,\n          handleKeyboardSelection,\n          Selection\n        } = this.PRIVATE\n\n        if (cherryPickedOptions === null) {\n          this.PRIVATE.cherryPickedOptions = new Selection([])\n        }\n\n        let { index, keyboard } = evt.detail\n\n        let completeOperation = selection => {\n          let currentSelection = getCurrentSelection()\n          let comparator = selection.length >= currentSelection.length ? selection.options : currentSelection\n          let diff = diffSelections(comparator, comparator === currentSelection ? selection.options : currentSelection)\n\n          if (diff.length === 0 || !this.PRIVATE.isSlave) {\n            return\n          }\n\n          this.deselectAll()\n          selection.selectAll()\n          this.emit('options.selected', {\n            options: selection.options,\n            previous: this.selectedOptions,\n            next: new (generateAuthorHTMLCollectionConstructor())(selection.displayElements)\n          }, this.parentNode)\n\n          // let { beforeChange } = this.parentNode\n          //\n          // let detail = {\n          //   options: selection.options,\n          //   previous: this.selectedOptions,\n          //   next: new (generateAuthorHTMLCollectionConstructor())(selection.displayElements)\n          // }\n          //\n          // let cb = () => {\n          //   this.deselectAll()\n          //   selection.selectAll()\n          //   return this.emit('options.selected', detail, this.parentNode)\n          // }\n          //\n          // if (!(beforeChange && typeof beforeChange === 'function')) {\n          //   return cb()\n          // }\n          //\n          // beforeChange(this.selectedOptions, detail.next, cb)\n        }\n\n        if (!this.multiple) {\n          return completeOperation(new Selection([this.options[index]]))\n        }\n\n        if (keyboard) {\n          return this.PRIVATE.handleKeyboardSelection(evt.detail, completeOperation)\n        }\n\n        return this.PRIVATE.handleClickSelection(evt.detail, completeOperation)\n      },\n\n      parentStateChangeHandler: evt => {\n        this.emit('state.change', evt.detail)\n\n        let { name, value } = evt.detail\n\n        switch (name) {\n          case 'multiple':\n            if (!value && this.selectedOptions.length > 0) {\n              let index = this.selectedIndex\n\n              this.deselectAll()\n              this.emit('option.selected', { index })\n            }\n\n            break\n\n          default: return\n        }\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => {\n        this.PRIVATE.selectionStartIndex = this.selectedIndex >= 0 ? this.selectedIndex : 0\n\n        if (this.PRIVATE.isSlave) {\n          this.parentNode.on('state.change', this.PRIVATE.parentStateChangeHandler)\n        }\n      },\n\n      disconnected: () => {\n        if (this.PRIVATE.isSlave) {\n          this.parentNode.off('state.change', this.PRIVATE.parentStateChangeHandler)\n        }\n      },\n\n      'keydown.arrowUp': this.PRIVATE.arrowUpHandler,\n      'keydown.arrowDown': this.PRIVATE.arrowDownHandler,\n      'option.selected': this.PRIVATE.optionSelectionHandler\n    })\n  }\n\n  get selectedIndex () {\n    return this.selectedOptions.length > 0\n      ? this.selectedOptions.item(0).index\n      : -1\n  }\n\n  set selectedIndex (index) {\n    this.emit('option.selected', { index })\n  }\n\n  get selectionStartIndex () {\n    return this.PRIVATE.selectionStartIndex\n  }\n\n  set selectionStartIndex (value) {\n    this.UTIL.throwError({\n      type: 'readonly',\n      message: `\"selectionStartIndex\" cannot be set manually.`\n    })\n  }\n\n  addOptgroup (optgroup) {\n    let label = document.createElement('author-optgroup-label')\n    label.innerHTML = optgroup.getAttribute('label')\n\n    this.appendChild(label)\n    this.appendChild(optgroup)\n  }\n\n  addOption (option, index = null, dest = this) {\n    if (!customElements.get('author-option')) {\n      return this.UTIL.throwError({\n        type: 'dependency',\n        vars: {\n          name: 'author-option'\n        }\n      })\n    }\n\n    if (option instanceof Option) {\n      option = this.PRIVATE.generateOptionObject(option)\n    }\n\n    if (this.PRIVATE.isSlave) {\n      this.parentNode[`${option.index}`] = option.displayElement\n    }\n\n    if (index) {\n      dest.insertBefore(option.displayElement, dest.children.item(index))\n\n      this.options.splice(index, 0, option)\n\n      if (this.PRIVATE.isSlave) {\n        this.parentNode.sourceElement.add(option.sourceElement, index)\n      }\n\n    } else {\n      dest.appendChild(option.displayElement)\n      this.options.push(option)\n\n      if (this.PRIVATE.isSlave && !this.parentNode.sourceElement[this.options.length - 1]) {\n        this.parentNode.sourceElement.appendChild(option.sourceElement)\n      }\n    }\n\n    if (option.selected) {\n      if (!this.multiple) {\n        this.selectedIndex = option.index\n        return\n      }\n    }\n  }\n\n  addOptions (children) {\n    Array.from(children).forEach(child => {\n      let isElement = child instanceof HTMLElement\n\n      switch (child.nodeName) {\n        case 'OPTION':\n          return this.addOption(isElement ? this.PRIVATE.generateOptionObject(child) : child)\n\n        case 'OPTGROUP':\n          return this.addOptgroup(isElement ? this.PRIVATE.generateOptgroup(child) : child)\n\n        default:\n          return this.UTIL.printToConsole(`${child.nodeName.toLowerCase()} is not a valid child element for <author-select>. Removing...`, 'warning')\n      }\n    })\n  }\n\n  clear () {\n    while (this.lastChild) {\n      this.removeChild(this.lastChild)\n    }\n  }\n\n  deselect (option, updateList = true) {\n    if (typeof option === 'number') {\n      option = this.options[option]\n    }\n\n    option.selected = false\n\n    if (this.PRIVATE.isSlave && this.selectedOptionsElement !== undefined) {\n      this.parentNode.selectedOptionsElement.remove(option, updateList)\n    }\n  }\n\n  deselectAll (showPlaceholder = true) {\n    this.options.filter(option => option.selected).forEach((option, index, options) => {\n      this.deselect(option, index = options.length - 1 && showPlaceholder)\n    })\n  }\n\n  hoverOption (index) {\n    this.unHoverAllOptions()\n    this.options[index].displayElement.hover = true\n  }\n\n  item (index) {\n    return this.options[index].displayElement\n  }\n\n  namedItem (value) {\n    let query = this.options.filter(option => {\n      let id = option.sourceElement.attributes.getNamedItem('id')\n      return id && id.value === value\n    })\n\n    if (!query.length) {\n      return null\n    }\n\n    return query[query.length - 1].displayElement\n  }\n\n  /**\n   * @method removeOptionByIndex\n   * @param  {Number}  [index=null]\n   * Index of option to remove\n   * @param  {Boolean} [destroy=true]\n   */\n  removeOptionByIndex (index = null) {\n    if (index === null || index >= this.options.length) {\n      return\n    }\n\n    this.options[index].remove()\n  }\n\n  unHoverAllOptions () {\n    this.options.forEach((option, index) => this.unHoverOption(index))\n  }\n\n  unHoverOption (index) {\n    this.options[index].displayElement.hover = false\n  }\n}\n\ncustomElements.define('author-options', AuthorOptionsElement)\n\nexport default AuthorOptionsElement\n"],"names":["AuthorOptionsElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineProperties","cherryPickedOptions","private","form","readonly","get","parentNode","displayOptions","PRIVATE","generateAuthorHTMLOptionsCollectionConstructor","options","map","option","displayElement","selectedIndex","element","before","addOption","generateOptionObject","index","removeOptionByIndex","hoveredIndex","findIndex","hover","isSlave","localName","lastSelectedIndex","multiple","default","selectedIndices","selectedOptions","nodes","querySelectorAll","generateAuthorHTMLCollectionConstructor","Selection","displayElements","length","first","last","push","includes","unshift","forEach","selected","selectionStartIndex","visibleOptions","filter","hidden","definePrivateMethods","arrowDownHandler","evt","startIndex","detail","hoverOption","emit","keyboard","shiftKey","ctrlKey","metaKey","arrowUpHandler","diffSelections","comparator","comparable","_p","WeakMap","AuthorHTMLCollection","arr","add","remove","set","Symbol","toStringTag","generateOptgroup","optgroup","customElements","throwError","type","vars","name","surrogate","document","createElement","id","generateGuid","label","getAttribute","trim","message","setAttribute","Array","from","sourceElement","generateOptionConstructor","parent","key","defaultSelected","innerHTML","attributes","attr","value","removeAttribute","disabled","textContent","hasAttribute","text","setAttr","bool","getCurrentSelection","handleClickSelection","cb","selectedOption","clear","bounds","sort","a","b","slice","currentSelection","handleKeyboardSelection","selection","optionSelectionHandler","completeOperation","deselectAll","selectAll","previous","next","parentStateChangeHandler","registerListeners","connected","on","disconnected","off","keydown.arrowUp","keydown.arrowDown","option.selected","item","appendChild","dest","Option","insertBefore","children","splice","child","isElement","nodeName","addOptgroup","printToConsole","toLowerCase","lastChild","removeChild","updateList","undefined","selectedOptionsElement","showPlaceholder","deselect","unHoverAllOptions","query","getNamedItem","unHoverOption","define"],"mappings":"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"}